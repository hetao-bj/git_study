1.让git管理文件：
在需要git管理的文件夹上右键点击git bash here，打开git命令行后，执行git init命令即可

2.将未跟踪的文件添加到暂存区，需要使用：
git add filename 或者 git commit -am "message"

3.git 用户的注册：
 git config --global user.name hetao 
 git config --global user.email 289022725@qq.com

4.只有注册后才可以进行git commit 操作，否则git不知道是哪位用户在进行提交

5.查看git状态：
git status :当前文件状态
git log :当前提交信息
git config --list :列出git的配置信息
git branch : 列出所有的branch，并用* 表示出当前分支

6.git commit --amend命令：
 该命令会撤销上次最后一次提交（commit），并将暂存区的文件重新提交

7.git checkout -- filename ：
该命令会从暂存区拉取filename 来替换当前工作区修改乱了的filename 如果
filename已经在暂存区了，则该操作不会起作用

8.git  restore  --staged filename:将暂存区的filename unstage到工作区
   git reset HEAD filename:将版本库中HEAD指向的filename 拉取到暂存区

9.对某个文件取消跟踪
git rm --cached readme1.txt    删除readme1.txt的跟踪，并保留在本地。
git rm --f readme1.txt    删除readme1.txt的跟踪，并且删除本地文件和暂存区文件。

10.git中文件的重命名
git mv old_filename new_filename :将工作区和暂存区的文件都进行重命名

11. 分支创建
git branch branch_name 创建一个分支，但是并不切换
git checkout -b branch_name 创建一个分支并切换过去

12.git diff：比较工作区与暂存区文件的差异
git diff --staged : 比较暂存区与版本库的文件差异
git diff 版本号 版本号 ：比较当前分支内的两个版本之间文件的差异
git diff 分支 分支：比较两个分支的最新提交版本之间的差异

13.git merge branch_name :
合并两个分支，合并之前需要切换到master分支，然后进行快速合并或者冲突合并

14.git stash:将工作区的改动保存到stash中
git stash list:查看stash中保存有哪些内容
git stash apply stash@{0}：将stash中的{0}所包含的文件应用到当前工作区中
git stash pop stash@{0}:将stash中的{0}所包含的文件应用到当前工作区中，并删除stash中的{0}
git stash drop stash@{0}: 将stash中的{0}删除掉

15.在github上创建远程仓库方式见图片教程，此处说明一下，
对已经创建好的远程仓库，在第一次将本地仓库推送到远程仓库时
使用命令：
1）git push https://github.com/hetao-bj/git_study.git master
2）该命令执行后有可能会出现没有弹出输入用户名和密码的弹框，此时可以按Ctrl+C，退出push状态
3）然后执行git credential-manager uninstall命令，执行后既可正常弹出用户名和密码窗口
4）再执行git push https://github.com/hetao-bj/git_study.git master
5）提示：fatal: unable to access 'https://github.com/hetao-bj/git_study.git/': Failed to connect to github.com port 443: Timed out
6）执行git config --global http.sslVerify "false"，解决第五步的问题
7）再执行git push https://github.com/hetao-bj/git_study.git master，将本地仓库的内容推送到远程仓库的master分支

16.ssh-keygen：生成本地的公钥和私钥
ssh-copy-id hetao@192.168.50.114:将本地的公钥复制到服务器的authorized_keys文件中
复制后再对服务器的仓库进行push或者pull的操作时不需要再输入密码




